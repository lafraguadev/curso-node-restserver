inicializamos el proyecto
   npm init -y

Instalamos los packages 
   npm i express dotenv

trabajamos Express basado en clases
   ver models/server.js  y app.js

codigos de error API , referencia en http-response-codes.pdf

- CORS - middleware   https://www.npmjs.com/package/cors
   proteje que solo ciertas paginas accesen nuestra api o  todas las paginas.


Separar las rutas en un archivo aparte
routes/nombre de la tabla, routes/users.js

todas las funciones qhe ejecutan las rutas se pasan a controller/usuarios.js y en la rutas
referenciamos la funcion sin () para que no se ejecute. si ponemos () se ejecuta.



RESPALDO en repositorio del cascaron para crear futuras RESTAPI

   -git init
   -git add .
   -git commit -m "Primer commit, backend basico listo"
   -------------------------
   si borro algo accidentalmente, lo puedo recuperar con : git checkout -- .  
   -------------------------

   para subirlo a github, nos loggeamos en github.com
   - creamos un nuevo repositorios (nombrexxxxx), descripion, publico o privado

   copiamos las lineas de donde dice: (y se pegan en la terminal del proyeto)
   â€¦or push an existing repository from the command line
      git remote add origin https://github.com/lafraguadev/curso-node-restserver.git
      git branch -M main
      git push -u origin main
      
      NOTA: si hay problemas de autenticacion en visual code preferences desmarcar Git: Terminal Authentication

   crear un el archivo README.md con indicaciones o comentarios de como usar el proyecto

      - para subir el cambio en el archivo 
         git add .
         git commit -m "README added"
         git push

   

